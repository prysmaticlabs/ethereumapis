// Copyright 2020 Prysmatic Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package ethereum.eth.v1;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "proto/gateway/event_source.proto";

option csharp_namespace = "Ethereum.Eth.v1";
option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1";
option java_multiple_files = true;
option java_outer_classname = "BeaconEventsProto";
option java_package = "org.ethereum.eth.v1";
option php_namespace = "Ethereum\\Eth\\v1";

// Events API
//
// The events API is a set of endpoints to subscribe to protocol events in eth2.
service Events {
  // StreamEvents to clients such as new chain head, chain reorgs, voluntary exits, and more.
  rpc StreamEvents(StreamEventsRequest) returns (stream gateway.EventSource) {
    option (google.api.http) = {
      post: "/eth/v1/events",
      body: "*"
    };
  }
}

message StreamEventsRequest {
  repeated string topics = 1;
}